%Script to test "BlockDurbin"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CASE 1: %%  3 "time points", 3 "genes"
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
times = [1:17]'; %column
covfunc = {'covSum', {'covSEiso', 'covNoise'}};
logtheta =[0.5194;-0.9429;0.1405];
K = feval(covfunc{:}, logtheta, times);
blockSize = 3;
n = blockSize;
putIdentityOnDiag = true;

myMatrix = blockify(K, blockSize, putIdentityOnDiag);
originalM = myMatrix;
blockR   = myMatrix(1:n,:);
blockR(:,1:n) = [];
blockR = blockR';
myMatrix(end-(n-1):end,:) = [];
myMatrix(:,end-(n-1):end) = [];
y = -inv(myMatrix)*blockR;
r = blockR(1:n:end,1);

y = -inv(myMatrix)*blockR;

% y =
%
%    -0.1159   -0.1159   -0.1159
%    -0.1159   -0.1159   -0.1159
%    -0.1159   -0.1159   -0.1159
%    -0.0343   -0.0343   -0.0343
%    -0.0343   -0.0343   -0.0343
%    -0.0343   -0.0343   -0.0343
%     0.0053    0.0053    0.0053
%     0.0053    0.0053    0.0053
%     0.0053    0.0053    0.0053
%     0.0074    0.0074    0.0074
%     0.0074    0.0074    0.0074
%     0.0074    0.0074    0.0074
%     0.0010    0.0010    0.0010
%     0.0010    0.0010    0.0010
%     0.0010    0.0010    0.0010
%    -0.0011   -0.0011   -0.0011
%    -0.0011   -0.0011   -0.0011
%    -0.0011   -0.0011   -0.0011
%    -0.0004   -0.0004   -0.0004
%    -0.0004   -0.0004   -0.0004
%    -0.0004   -0.0004   -0.0004
%     0.0001    0.0001    0.0001
%     0.0001    0.0001    0.0001
%     0.0001    0.0001    0.0001
%     0.0001    0.0001    0.0001
%     0.0001    0.0001    0.0001
%     0.0001    0.0001    0.0001
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000

log(det(originalM))
% ans =
% 
%    -2.6569
[y logDet] =  BlockDurbin(r', n)
% y =
%
%    -0.1159
%    -0.0343
%     0.0053
%     0.0074
%     0.0010
%    -0.0011
%    -0.0004
%     0.0001
%     0.0001
%     0.0000
%    -0.0000
%    -0.0000
%     0.0000
%     0.0000
%     0.0000
%    -0.0000
%
%
%
% logDet =
%
%    -2.6569


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CASE 2: %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% randn('state', 1);
% rand('state', 1);

times = [1:10]'; %column
covfunc = {'covSum', {'covSEiso', 'covNoise'}};
logtheta =[log(0.5);log(0.5);log(0.1)];
K = feval(covfunc{:}, logtheta, times);
blockSize = 5;
n = blockSize;
putIdentityOnDiag = true;

myMatrix = blockify(K, blockSize, putIdentityOnDiag);
originalM = myMatrix;
blockR   = myMatrix(1:n,:);
blockR(:,1:n) = [];
blockR = blockR';
myMatrix(end-(n-1):end,:) = [];
myMatrix(:,end-(n-1):end) = [];
r = blockR(1:n:end,1);

y = -inv(myMatrix)*blockR
% y =
%
%    -0.0348   -0.0348   -0.0348   -0.0348   -0.0348
%    -0.0348   -0.0348   -0.0348   -0.0348   -0.0348
%    -0.0348   -0.0348   -0.0348   -0.0348   -0.0348
%    -0.0348   -0.0348   -0.0348   -0.0348   -0.0348
%    -0.0348   -0.0348   -0.0348   -0.0348   -0.0348
%     0.0060    0.0060    0.0060    0.0060    0.0060
%     0.0060    0.0060    0.0060    0.0060    0.0060
%     0.0060    0.0060    0.0060    0.0060    0.0060
%     0.0060    0.0060    0.0060    0.0060    0.0060
%     0.0060    0.0060    0.0060    0.0060    0.0060
%    -0.0010   -0.0010   -0.0010   -0.0010   -0.0010
%    -0.0010   -0.0010   -0.0010   -0.0010   -0.0010
%    -0.0010   -0.0010   -0.0010   -0.0010   -0.0010
%    -0.0010   -0.0010   -0.0010   -0.0010   -0.0010
%    -0.0010   -0.0010   -0.0010   -0.0010   -0.0010
%     0.0002    0.0002    0.0002    0.0002    0.0002
%     0.0002    0.0002    0.0002    0.0002    0.0002
%     0.0002    0.0002    0.0002    0.0002    0.0002
%     0.0002    0.0002    0.0002    0.0002    0.0002
%     0.0002    0.0002    0.0002    0.0002    0.0002
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%     0.0000    0.0000    0.0000    0.0000    0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
%    -0.0000   -0.0000   -0.0000   -0.0000   -0.0000
log(det(originalM))

% 
% ans =
% 
%    -0.2682
% 

[y logDet] =  BlockDurbin(r', n)


% y =
% 
%    -0.0348
%     0.0060
%    -0.0010
%     0.0002
%    -0.0000
%     0.0000
%    -0.0000
%     0.0000
%    -0.0000
% 
% 
% logDet =
% 
%    -0.2682


times = [1:10]'; %column
covfunc = {'covSum', {'covSEiso', 'covNoise'}};
logtheta =[log(.5);log(.8);log(0.1)];
K = feval(covfunc{:}, logtheta, times);
blockSize = 5;
n = blockSize;
putIdentityOnDiag = true;

myMatrix = blockify(K, blockSize, putIdentityOnDiag);
originalM = myMatrix;
blockR   = myMatrix(1:n,:);
blockR(:,1:n) = [];
blockR = blockR';
myMatrix(end-(n-1):end,:) = [];
myMatrix(:,end-(n-1):end) = [];
r = blockR(1:n:end,1);

y = -inv(myMatrix)*blockR
% y =
% 
%    -0.1152   -0.1152   -0.1152   -0.1152   -0.1152
%    -0.1152   -0.1152   -0.1152   -0.1152   -0.1152
%    -0.1152   -0.1152   -0.1152   -0.1152   -0.1152
%    -0.1152   -0.1152   -0.1152   -0.1152   -0.1152
%    -0.1152   -0.1152   -0.1152   -0.1152   -0.1152
%     0.0660    0.0660    0.0660    0.0660    0.0660
%     0.0660    0.0660    0.0660    0.0660    0.0660
%     0.0660    0.0660    0.0660    0.0660    0.0660
%     0.0660    0.0660    0.0660    0.0660    0.0660
%     0.0660    0.0660    0.0660    0.0660    0.0660
%    -0.0378   -0.0378   -0.0378   -0.0378   -0.0378
%    -0.0378   -0.0378   -0.0378   -0.0378   -0.0378
%    -0.0378   -0.0378   -0.0378   -0.0378   -0.0378
%    -0.0378   -0.0378   -0.0378   -0.0378   -0.0378
%    -0.0378   -0.0378   -0.0378   -0.0378   -0.0378
%     0.0217    0.0217    0.0217    0.0217    0.0217
%     0.0217    0.0217    0.0217    0.0217    0.0217
%     0.0217    0.0217    0.0217    0.0217    0.0217
%     0.0217    0.0217    0.0217    0.0217    0.0217
%     0.0217    0.0217    0.0217    0.0217    0.0217
%    -0.0124   -0.0124   -0.0124   -0.0124   -0.0124
%    -0.0124   -0.0124   -0.0124   -0.0124   -0.0124
%    -0.0124   -0.0124   -0.0124   -0.0124   -0.0124
%    -0.0124   -0.0124   -0.0124   -0.0124   -0.0124
%    -0.0124   -0.0124   -0.0124   -0.0124   -0.0124
%     0.0071    0.0071    0.0071    0.0071    0.0071
%     0.0071    0.0071    0.0071    0.0071    0.0071
%     0.0071    0.0071    0.0071    0.0071    0.0071
%     0.0071    0.0071    0.0071    0.0071    0.0071
%     0.0071    0.0071    0.0071    0.0071    0.0071
%    -0.0039   -0.0039   -0.0039   -0.0039   -0.0039
%    -0.0039   -0.0039   -0.0039   -0.0039   -0.0039
%    -0.0039   -0.0039   -0.0039   -0.0039   -0.0039
%    -0.0039   -0.0039   -0.0039   -0.0039   -0.0039
%    -0.0039   -0.0039   -0.0039   -0.0039   -0.0039
%     0.0021    0.0021    0.0021    0.0021    0.0021
%     0.0021    0.0021    0.0021    0.0021    0.0021
%     0.0021    0.0021    0.0021    0.0021    0.0021
%     0.0021    0.0021    0.0021    0.0021    0.0021
%     0.0021    0.0021    0.0021    0.0021    0.0021
%    -0.0009   -0.0009   -0.0009   -0.0009   -0.0009
%    -0.0009   -0.0009   -0.0009   -0.0009   -0.0009
%    -0.0009   -0.0009   -0.0009   -0.0009   -0.0009
%    -0.0009   -0.0009   -0.0009   -0.0009   -0.0009
%    -0.0009   -0.0009   -0.0009   -0.0009   -0.0009

log(det(originalM))
% ans =
% 
%    -2.4625


[y logDet] =  BlockDurbin(r', n)

% 
% y =
% 
%    -0.1152
%     0.0660
%    -0.0378
%     0.0217
%    -0.0124
%     0.0071
%    -0.0039
%     0.0021
%    -0.0009
% 
% 
% logDet =
% 
%    -2.4625
